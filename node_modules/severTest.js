//IMPORT MODULES
var mysql      = require('mysql');
var Sequelize = require('sequelize');

// db config
var env = "development";
var config = require('../config/config.json')[env];

var user = config.username;
var db = config.database;
var password = config.password ? config.password : null;


// create a simple  connection to database
var connection = mysql.createConnection({
  host     : 'localhost',
  user     : 'root',
  password : '',
  database : 'resto'
});


//test conection
connection.connect(function(err){
if(!err) {
    console.log("Database is connected!! ... ");    
} else {
    console.log("Error connecting database ...", err);    
}
});


//create a cache of database connection for use it many times
var pool =  mysql.createPool({
    connectionLimit : 100, //important
    host     : 'localhost',
    user     : 'root',
    password : '',
    database : 'resto',
    debug    :  false
});

//test pool
function handle_database(req,res) {
    
    pool.getConnection(function(err,connection){
        if (err) {
          res.json({"code" : 100, "status" : "Error in connection database"});
          return;
        }   

        console.log('connected as id ' + connection.threadId);
        

        connection.on('error', function(err) {      
              res.json({"code" : 100, "status" : "Error in connection database"});
              return;     
        });//conection.On

  });//getConnection
}//function


// initialize database connection
var sequelize = new Sequelize(
  db,user,password,
  {
    logging: console.log,
    define: {
      timestamps: false
    }
  },//config.password
  {
  host: 'localhost',
  dialect: 'mysql',
  pool: {
    max: 5,
    min: 0,
    idle: 10000
  }//pool
});

sequelize.authenticate().then(function(err) {
    console.log('Connection has been established successfully.');
  })
  .catch(function (err) {
    console.log('Unable to connect to the database:', err);
  });


exports.connection = connection;
exports.handle_database = handle_database;
exports.pool = pool;
exports.sequelize = sequelize;